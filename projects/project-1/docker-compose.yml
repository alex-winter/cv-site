version: '3.8'

services:
  npm:
    build:
      context: .
      dockerfile: docker/npm/Dockerfile
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: ["npm"]

  php-server:
    build:
      context: .
      dockerfile: docker/php-server/Dockerfile
    ports:
      - "8081:80"
    volumes:
      - ./:/var/www/html
    environment:
      - ENVIRONMENT_NAME=development
      - ENVIRONMENT_IS_VIEW_CACHE=false
      - ENVIRONMENT_DATABASE_NAME=app
      - ENVIRONMENT_DATABASE_USER=appuser
      - ENVIRONMENT_DATABASE_PASSWORD=apppassword
      - ENVIRONMENT_DATABASE_HOST=database
      - ENVIRONMENT_DATABASE_DRIVER=pdo_mysql
      - ENVIRONMENT_DATABASE_CHARSET=utf8mb4
    depends_on:
      - database
    networks:
      - app-network 

  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: app
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./docker/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network 

  dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - database
    command: database:3306
    networks:
      - app-network 

volumes:
  db-data:

networks:
  app-network:
    driver: bridge 